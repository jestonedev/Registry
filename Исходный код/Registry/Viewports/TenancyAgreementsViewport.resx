<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAAEAAAABAAAAAQAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAAGAAAACgAAAA4AAAASAAAAEAAA
        AAwAAAAGAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAoAAAASAAAAHAAA
        ACQAAAAqAAAAKAAAAB4AAAAUAAAACgAAAAQAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAAIAAAAEAAA
        ABwAAAAqAAAANg4SFUwLDhFQAAAARgAAADoAAAAoAAAAGgAAAA4AAAAGAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABAAA
        AAwAAAAWAAAAJAAAADYQFBdQExkfZAMFBmQDBAZqAgMDZAAAAFYAAABEAAAAMAAAACAAAAASAAAACAAA
        AAQAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAGAAAADgAAABwAAAAsAAAAgxEWGdcdKDH7JzVA/wUHCZMDBAaBAQIDegABAW4EBQZiAAAATAAA
        ADgAAAAmAAAAGAAAAA4AAAAGAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAYAAAAQAAAAHgAAAEAAAACTHiYt746vx/+KqsL/LzxI/x4qNP8SFxz7CQwN2QEC
        A5cAAAF6AwQEaAAAAFIAAABAAAAALgAAAB4AAAASAAAACgAAAAQAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAACAAAABIAAAAiAAAAaA8SFskuO0b5d5iy/36guP/C0d3/x9Te/yUx
        PP8wQlL/N0VQ/x0nMf8ICg2jCw8SixwlLIUOEhVoAAAASgAAADgAAAAmAAAAGAAAAA4AAAAGAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAKAAAAFAAAACYAAAA6GSAm3ZW30v+Rss3/ja3F/4im
        vv+xxNL/ytff/xsmLv8qN0T/RVdm/ygzPP8QFRn/CxEW4woPEucOExiVCAoMbgAAAFQAAABCAAAAMAAA
        AB4AAAAOAAAABgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAoAAAAWAAAAKhcdIYMrNkDxR1lo/5Cz
        zf+hvdD/3OXr/8zZ4v92l7D/JjU//0FITv9BU2H/Umh8/ywzOv84Q03/W2Vu/0tUWvcRGR3pCQwOkQsP
        EXYKDRBkAAAASgAAADIAAAAcAAAACgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAACgAAABgAAAAsSFlomUpc
        bPuXu9f/lrjT/5Cxy/+zyNf/4Oju/97m7P9Yepf/NEZW/2uAk/98lqz/RlJd/1Zse/9EVmT/S1xs/01Z
        ZP8nLjf/GSIn/xAWHekHCgx+BAUGYgAAAEYAAAAoAAAAEgAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAAFAAA
        ACp1lK2ZSF5w/5m82P+Xu9X/ssnd/8XW5P9zj6f/kq7D/8HQ2/9Zc4r/PE5b/1lyh/9gcoH/Tltn/3OR
        p/9TZXT/S1lk/1hodP8mNED/W2hy/zQ9Q/8GCg3JBAYHcAAAAFYAAAA2AAAAHAAAAAwAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAMAAAAHklca9c9T17/PE1b/5i71//E2Ob/8/b5/97n7v+1yNn/XXeM/z1OXP9MYXP/d5Gl/4Od
        sf8uQE//g6TB/3aIlv92hZD/WGdy/0dWYv8vQVL/QFdr/1VibP8eLDf/EhcdmQAAAHIAAABGAAAAKAAA
        ABIAAAAGAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAYAAAAQP05b20pdbP+bv9z/mb3a/5e61v+WudX/4+zx//P2+f/a5ez/aXuK/0lc
        bP9nfY7/j6Gy/0hhdf9piaH/haG5/560xv+QprX/VGVz/1Bjc/9KXW3/Q1ls/zpPYf8kM0D/MkFQ6QAA
        AM0AAABWAAAAOAAAABwAAAAMAAAABAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAIAAAAEAAAABgAAAAp5lKtGM0FL/ZzA3P+60+b/1ePu/5i71/+au9X/lLfS/8bX
        5f+Qscr/N0JM/3GKnf97l6//WHWT/3+jv/+ZuNP/qsri/6HA1/9JaoP/l6m3/6W1wP9pf5L/P1dp/0Vh
        df80RVH5boid/zxKVeMICgvDAAAARgAAACgAAAAUAAAACgAAAAYAAAACAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAEAAAABgAAAAgAAAAKAAAADAAAABB/m7FkNkFM+5zA3P/n7/T/9vn7/9Xj
        7v+vz+j/X3B+/09daP9PX2v/h6a//5i0yv9+or7/mrTL/5W1zf+30OL/zODu/2OFof+ftcP/t8TN/669
        yP+xwMv/RWB1/zFGVflkfZDzd5Oo/3OOo/87SVXrAAAAaAAAADYAAAAeAAAAEgAAAAgAAAAEAAAAAgAA
        AAIAAAACAAAAAgAAAAAAAAAAAAAAAAAAAAIAAAAEAAAACAAAAAwAAAAQAAAAEgAAADYfJSuTVGRz9WF3
        h/+bv9z/3uny/77S4v9baHP/a3uJ/7bS6P+3z+L/rMbZ/6C60f+4zdz/scTU/6PB2P/f7PL/hKbB/5y1
        x/+ft8v/w9Hb/77N1/+/z9z/YHeO/0ZXZe9rhJf/dJCn/3uXr/9uh5v/AAAA0wAAAHQAAABGAAAAFgAA
        AA4AAAAIAAAABAAAAAIAAAACAAAAAgAAAAIAAAAAAAAAAgAAAAIAAAAEAAAABgAAACAOERRoIywzmzRA
        SMdxiJrhfpKk93yOnP17jZ3/e42b/2l0fv+jtsX/x93x/2Fzgf9baHP/U2Bp/0lVXv9IWWj/f5Sm/6S9
        0f/k7vX/rsDO/7LH2P/M2+f/z9/r/5i2zv94mLD/NEBM6VRndf9ogZT/c46j/3uYrf99m6//R1hl90xf
        becrNTu1CwwOkQAAAGIAAAAkAAAADgAAAAIAAAACAAAAAgAAAAQAAAAAAAAAABIWGhQVGyA4JjQ/VCo4
        RIVoh5+ZeJWrx4agtOGOpbjtnbTG9aq+0v2zxtX/xdjq/9Dj8f/W5vT/wNru/3+asf+fwt7/qsTa/4CW
        p/9XYWv/QFBd/26Lof/V4+7/xdXj/9Hg6v/N3en/nbvR/3WZtP8nN0TtV2x7/19vfP9qf5H/aYOX/3qX
        rf9+m7L/X3SF/3mWq/tpgpffaoKWv2F4iZNPYG5oLzpBPgsOECIAAAAOAAAAAgAAAAQAAAAAAAAAACQy
        PiZcf5kqY4acSGuKomxzkKaXhqG5xZq71eWeudHvp73R97jP5P3B1eX/0uPx/9vr9v/a6fb/vtrv/5Kf
        qv/d6PL/rLa9/7bN3f+BlKP/Q0tS/1hhav+YuM7/vdLg/8rZ4v+xyNn/c5q3/zNKWftPYW/xWW17/11v
        ff9oeYf/cYqc/3uXrf95l67/cIqc/32ctPV7mK7ZepettXyYr5F3kadub4icSmmBlCQAAAAGAAAABAAA
        AAQAAAAAAAAAAD9Uag53mLIqb4ykRn2euGyLrMmXlLjVw5/B3eujvtb1rMje+73U6P3P4PD/1+j1/9zq
        9//P4vT/vtnv/6Oqsf/t8vj/1eLt/6Wss/+Orsf/eI2Z/z5IUf9viJr/qbbA/7/Q3v+An7b/QFRl/1tw
        g/ljdoX/cIOR/3qPn/9wg5T/fJOl/36asf95la//mLHE/3+ctO98ma7Pe5atrXyZr4l9ma5kgJyzQGuD
        lhYAAAACAAAAAgAAAAQAAAAAAAAAADtQYgh8ob0mhKvLRISoyGqUu9qVkbPRv5m60+Wkw933uNPm/cjd
        8P/P4vP/1OX0/9no9P/D2+//nrHA/3eCiv/Azdf/x9Pc/5airP+Kq8T/eI+i/ztES/9tfYr/m7XJ/4+n
        u/9LYHX/TF1s9Vhtff9ngJL/eI6e/3mQo/9/l6z/g52z/3+ctf95la3/fpy0/5GqveeRqbvHg5uyo3ya
        r3x/nLNYf5+1NiozOhAAAAACAAAAAgAAAAQAAAAAAAAAAAAAAAKKstIeh67PQIity2iVvd6TlLjWv5i8
        2OGiwNf7uNLo/77U6f/K3O7/1OPy/9ro9P/T5PL/c32H/6O/1v/G2ej/s83e/5u50P+KqsP/c4yg/zY/
        R/9PWWH/W29//z1QX/8tOEPxSVpp/2V8j/9viZ7/dZGm/3iVqf99mrL/f520/3eUrf+CobX/hKW8+XuY
        rN93lKu/jKO2mYmit3SAnbNQgZ+2LAkKDAgAAAACAAAAAgAAAAIAAAAAAAAAAAAAAAJ0lrAYkb3fPJO8
        3l6awuOJnsLks6XK59mrzur9tdXs/cbc7//P4/T/1+j3/+Ds9//d6/b/dH+H/6zH3P/W4+7/s8zg/5i3
        z/+IqMD/boaZ/1Rodv82QEn/Q05X/05hcP1TZ3f/aIGV/3aTqP96lqz/fZyz/4OjuP+GpL3/gaO8/22H
        m/95k6f/mLLG84qmuteBn7a1fZyzj32csmqAnrZGgp+2HgAAAAIAAAACAAAAAgAAAAIAAAAAAAAAAAAA
        AABgepEOk7vfMpa/4ladxOR6p8non7TT68W72vDrv9vy+bnQ4f3K2+z92Of2/97s9//d7Pj/dX+H/7nP
        4P/V4e7/vdPj/522yf9/l6z/fZmv/4Siuf9wiJv/X3WG/VlugP9+m7P/gJ61/4Ght/+Eo7z/iKjB/5Cv
        yP+bt8z/gJep/3aNn/+bt8z/jqvC7Z60xs+bs8OtiKa9h4alvGCHpsA8aH6RFAAAAAIAAAACAAAAAgAA
        AAIAAAAAAAAAAAAAAAAAAAACmL/fJqPI6EKuzuhsudLqj77X7LXC2u7RyeDw78jf8PHF3fD7zt3r/dLi
        7f/b6fb/V11i/9Lk8v/B1+b/1uTv/8TU3v+uxdb/p77S/5GuxP+FpLv/hqS7/3GMoP+Hpr7/i6rC/5Ow
        x/+Sssn/obzS/6fB1v+OqLv/a4GR/5Wrvv+1zd39q8LT5bPD0cepvs6jnLXJfJSwxliLqMA0MTxEDAAA
        AAIAAAACAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAACpMXeGrfT6Ta50+lYuNHmdsLW6JvU4u672eXy3cTc
        8OfH3/Hx3uv2+eDt9v3B0Nz/laKt/15la/+TpLL/ydzq/9nm7//Z5O3/w9Ti/7TJ2v+gu8//lLHK/3iV
        qf+Sscn/rcXX/7nN3f+4zd7/rsnd/4ilvP9th5v/a4KT/5equf+8ydT1uszZ3bzM2L25yNOZscbUcqrA
        0U6XssooEhQWBgAAAAIAAAACAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAClrbODqjH3ya2zOBAwNLiWMfX
        5X7D2embvNfqwbzW7de+2+7hzd/v8cXN0/nAyc/9oq+6/5yqtf9aYmn/X212/5Ktwv/A1uf/1+Pt/9Pg
        6/++0eD/scnc/6zC1P+sxtr/t87g/6nG3f+PrMb/KjY+xSUtNL9acYLTfpyy/5Osv/+kt8Ttvs3Z08DP
        27HE0NqPws/aaKzC00KZscMeAAAAAgAAAAIAAAACAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAACAAAAArLG
        1hi4zd8sqcPZQqC+2Fylwt16nbnPnVppdKMeIyaZKS4zsWZxe/Gwtrz7w8nN/5+nqv+do6n/aXN7/01X
        X/9jdob/nLrU/8PX5f/X5O7/x9jn/8HW5v+wzOD/osPc/2qCltcFBwfBAAAAdgAAAEoAAACFAAAArVRm
        ds2UrsLNq8LVxbjM26XC0t2B2N7kXMrU3TqbqrUUAAAAAgAAAAIAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAAo+pvg6OrMcckLDLLnaSp0IkLTNaCgwOYAAAAFAAAAAoAAAAECcwNVY3QkrDSE9W/XJ0
        df+WmJn/d3yA/19seP9RXmn/NkBK/4KguP+tyd//yNvo/7PN4/+exOP/TF9w8wAAALEAAAAoAAAAGAAA
        AA4AAAAMAAAAHAAAADgAAACJNj9HjYGXp3qqxNp0uc3eUMnX4S5scngKAAAAAgAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAmZ8kAZidocOERYZJgAAACoAAAASAAAABgAAAAYAAAAEAAAABgAA
        AAYICgwIU1dcMFNYWudSWmD/RVBY/0NPWOs9SFD/PEtV2R4lKv8/Tlr/d5Kp83iPoccPExXFAAAAlQAA
        ACAAAAASAAAACgAAAAQAAAACAAAABAAAAAQAAAAGAAAAEgAAADIKCgpCWWx7OIqluyAAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDAwMEAAAAAgAAAAQAAAACAAAAAgAA
        AAIAAAAAAAAAAAAAAAAAAAACAAAAAgkLDQIQEhYSFxoeRiw1PFYuNz4aKzM6HERTXlxKVmH1Jy0y3wME
        Bb8BAQFGAAAAFgAAAA4AAAAGAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAIAAAACAAAACAAA
        AAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgICAggJCgQNDxECBgcIBAAA
        AAYAAAAIAAAACAAAAAgAAAAIAAAACAAAAAQAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AAIAAAAEAAAAAgAAAAIAAAACAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        4H///wAA///AH///AAD//4AD//8AAP//AAH//wAA//wAAP//AAD/+AAAf/8AAP/wAAA//wAA/+AAAB//
        AAD/wAAAD/8AAP/AAAAH/wAA/8AAAAf/AAD/gAAAA/8AAP4AAAAAfwAA+AAAAAA/AAD8AAAAAD8AAPwA
        AAAAPwAA/AAAAAB/AAD8AAAAAH8AAPwAAAAAfwAA/gAAAAB/AAD+AAAAAP8AAP8AAAAA/wAA/4AAAAD/
        AAD/wAABgP8AAP/+AAPz/wAA//+AB///AAD///8f//8AAP///////wAA////////AAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>